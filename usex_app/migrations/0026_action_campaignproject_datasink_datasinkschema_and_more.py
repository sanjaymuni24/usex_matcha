# Generated by Django 4.2.21 on 2025-07-04 14:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('usex_app', '0025_alter_templates_options_alter_templates_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('identifier', models.CharField(help_text='Unique identifier for the action.', max_length=50)),
                ('profile_attributes', models.JSONField(blank=True, default=dict, help_text='Attributes for the profile associated with this action.', null=True)),
                ('feed_attributes', models.JSONField(blank=True, default=dict, help_text='Attributes for the event associated with this action.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
                'unique_together': {('name', 'identifier')},
            },
        ),
        migrations.CreateModel(
            name='CampaignProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataSink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the sink.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description of the sink.', null=True)),
                ('sink_type', models.CharField(choices=[('Postgres', 'postgres'), ('Mysql', 'Mysql'), ('Kafka', 'Kafka'), ('API', 'API'), ('Hive', 'Hive')], help_text='Type of the sink (e.g., Database, Kafka, API, PostRequest).', max_length=50)),
                ('connection_params', models.JSONField(help_text='Connection parameters for the sink (e.g., host, port, credentials).')),
                ('enabled', models.BooleanField(default=False, help_text='Whether the sink is enabled for use.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataSinkSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_schema', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sink', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schema', to='usex_app.datasink')),
            ],
            options={
                'verbose_name': 'Data Sink Schema',
                'verbose_name_plural': 'Data Sink Schemas',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('profile_template_expression', models.CharField(default='', help_text='Template expression for the campaign profile, using placeholders for fields.', max_length=3000)),
                ('event_template_expression', models.CharField(default='', help_text='Template expression for the campaign event, using placeholders for fields.', max_length=3000)),
                ('contact_policy', models.JSONField(blank=True, default=dict, help_text='Contact policy for the campaign, defining how and when to contact profiles.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('DataSource', models.ForeignKey(help_text='The DataSource associated with this campaign.', on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='usex_app.datasource')),
                ('actions', models.ManyToManyField(blank=True, help_text='Actions associated with this campaign.', related_name='campaigns', to='usex_app.action')),
            ],
        ),
    ]
